import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b74c5ffd.js";const p="/stm32notebook/assets/引脚.5551c598.png",o="/stm32notebook/assets/GPIO引脚功能.348e9a95.png",e="/stm32notebook/assets/GPIO框图.660f2f99.png",t="/stm32notebook/assets/浮空模式.52843792.png",c="/stm32notebook/assets/输入上拉.4ad5d627.png",r="/stm32notebook/assets/输入下拉.d0cfbd51.png",E="/stm32notebook/assets/模拟输入.a53ed28c.png",y="/stm32notebook/assets/开漏输出.8b0b8642.png",i="/stm32notebook/assets/开漏复用输出.c38852fd.png",F="/stm32notebook/assets/推挽输出.cced3bc1.png",d="/stm32notebook/assets/推挽复用输出.55d4f420.png",B="/stm32notebook/assets/LED.d1ab4f74.png",R=JSON.parse('{"title":"使用寄存器点亮第一个 LED","description":"","frontmatter":{},"headers":[],"relativePath":"使用寄存器点亮第一个LED.md","filePath":"使用寄存器点亮第一个LED.md"}'),A={name:"使用寄存器点亮第一个LED.md"},_=l('<h1 id="使用寄存器点亮第一个-led" tabindex="-1">使用寄存器点亮第一个 LED <a class="header-anchor" href="#使用寄存器点亮第一个-led" aria-label="Permalink to &quot;使用寄存器点亮第一个 LED&quot;">​</a></h1><h2 id="stm32-gpio-介绍" tabindex="-1">STM32 GPIO 介绍 <a class="header-anchor" href="#stm32-gpio-介绍" aria-label="Permalink to &quot;STM32 GPIO 介绍&quot;">​</a></h2><h3 id="gpio-概念" tabindex="-1">GPIO 概念 <a class="header-anchor" href="#gpio-概念" aria-label="Permalink to &quot;GPIO 概念&quot;">​</a></h3><p>GPIO 引脚分类</p><ul><li>电源引脚</li><li>晶振引脚</li><li>复位引脚</li><li>下载引脚</li><li>BOOT 引脚</li><li>GPIO 引脚</li></ul><p><img src="'+p+'" alt=""></p><h4 id="电源引脚" tabindex="-1">电源引脚 <a class="header-anchor" href="#电源引脚" aria-label="Permalink to &quot;电源引脚&quot;">​</a></h4><p><code>VDD</code> <code>VSS</code> 等等这一类的引脚</p><h4 id="晶振引脚" tabindex="-1">晶振引脚 <a class="header-anchor" href="#晶振引脚" aria-label="Permalink to &quot;晶振引脚&quot;">​</a></h4><p>在<a href="./stm32最小系统.html">stm32 最小系统</a>中有讲</p><h4 id="下载引脚" tabindex="-1">下载引脚 <a class="header-anchor" href="#下载引脚" aria-label="Permalink to &quot;下载引脚&quot;">​</a></h4><p>同上</p><h4 id="boot-引脚" tabindex="-1">BOOT 引脚 <a class="header-anchor" href="#boot-引脚" aria-label="Permalink to &quot;BOOT 引脚&quot;">​</a></h4><p>同上</p><h4 id="gpio-引脚" tabindex="-1">GPIO 引脚 <a class="header-anchor" href="#gpio-引脚" aria-label="Permalink to &quot;GPIO 引脚&quot;">​</a></h4><p>除了上面的都是，电源引脚、复位引脚、不能当作 GPIO 用，别的引脚也许可以，具体要查芯片手册</p><h3 id="gpio-引脚功能" tabindex="-1">GPIO 引脚功能 <a class="header-anchor" href="#gpio-引脚功能" aria-label="Permalink to &quot;GPIO 引脚功能&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><h4 id="gpio-结构框图" tabindex="-1">GPIO 结构框图 <a class="header-anchor" href="#gpio-结构框图" aria-label="Permalink to &quot;GPIO 结构框图&quot;">​</a></h4><p><img src="'+e+'" alt=""></p><p>推挽模式可以使负载能力和开关速度都大大提高，这是由 mos 管性能所决定的</p><h4 id="gpio-工作模式" tabindex="-1">GPIO 工作模式 <a class="header-anchor" href="#gpio-工作模式" aria-label="Permalink to &quot;GPIO 工作模式&quot;">​</a></h4><p><strong>输入模式</strong></p><ul><li>输入浮空</li></ul><p><img src="'+t+'" alt=""></p><ul><li><p>输入上拉</p><blockquote><p>该模式对比输入浮空模式仅仅使能上拉电阻</p></blockquote><p><img src="'+c+'" alt=""></p></li><li><p>输入下拉</p><blockquote><p>对比该模式对比输入浮空模式仅仅使能下拉电阻</p></blockquote><p><img src="'+r+'" alt=""></p></li><li><p>模拟输入</p><p><img src="'+E+'" alt=""></p></li></ul><p><strong>输出模式</strong></p><blockquote><p>和输入模式不一样的是，它既可以写也可以读</p></blockquote><ul><li><p>开漏输出</p><p><img src="'+y+'" alt=""></p></li><li><p>开漏复用功能</p><p><img src="'+i+'" alt=""></p></li><li><p>推挽式输出</p><p><img src="'+F+'" alt=""></p></li><li><p>推挽式复用功能</p><p><img src="'+d+'" alt=""></p></li></ul><h2 id="硬件设计" tabindex="-1">硬件设计 <a class="header-anchor" href="#硬件设计" aria-label="Permalink to &quot;硬件设计&quot;">​</a></h2><p><img src="'+B+`" alt=""></p><h2 id="软件设计" tabindex="-1">软件设计 <a class="header-anchor" href="#软件设计" aria-label="Permalink to &quot;软件设计&quot;">​</a></h2><p><strong>main.c</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;stm32f10x.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> u32;</span><span style="color:#6A737D;">   //类型重定义 unsigned int -- u32</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SystemInit</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">delay</span><span style="color:#E1E4E8;">(u32 </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	RCC_APB2ENR </span><span style="color:#F97583;">|=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	GPIOB_CRL </span><span style="color:#F97583;">&amp;=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">( </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0F</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">	GPIOB_CRL </span><span style="color:#F97583;">|=</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">3</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">4</span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	GPIOB_BSRR</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	{</span></span>
<span class="line"><span style="color:#E1E4E8;">		GPIOB_BSRR</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">delay</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FFFFF</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		GPIOB_BSRR</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">delay</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">FFFFF</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;stm32f10x.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> u32;</span><span style="color:#6A737D;">   //类型重定义 unsigned int -- u32</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SystemInit</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">delay</span><span style="color:#24292E;">(u32 </span><span style="color:#E36209;">i</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">--</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	RCC_APB2ENR </span><span style="color:#D73A49;">|=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	GPIOB_CRL </span><span style="color:#D73A49;">&amp;=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">( </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0F</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">	GPIOB_CRL </span><span style="color:#D73A49;">|=</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">3</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">4</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	GPIOB_BSRR</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	{</span></span>
<span class="line"><span style="color:#24292E;">		GPIOB_BSRR</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">delay</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FFFFF</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		GPIOB_BSRR</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">delay</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">FFFFF</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>stm32f10x.h</strong></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PERIPH_BASE</span><span style="color:#E1E4E8;">      ((</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">40000000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">APB2PERIPH_BASE</span><span style="color:#E1E4E8;">  (PERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">00010000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BASE</span><span style="color:#E1E4E8;">       (APB2PERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0C00</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_CRL</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_CRH</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">04</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_IDR</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">08</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_ODR</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">0C</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BSRR</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BRR</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_LCKR</span><span style="color:#E1E4E8;"> 	 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AHBPERIPH_BASE</span><span style="color:#E1E4E8;">   (PERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">20000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RCC_BASE</span><span style="color:#E1E4E8;"> 		 (AHBPERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RCC_APB2ENR</span><span style="color:#E1E4E8;"> 	 </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(RCC_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PERIPH_BASE</span><span style="color:#24292E;">      ((</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">40000000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">APB2PERIPH_BASE</span><span style="color:#24292E;">  (PERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00010000</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BASE</span><span style="color:#24292E;">       (APB2PERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0C00</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_CRL</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_CRH</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">04</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_IDR</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">08</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_ODR</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">0C</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BSRR</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BRR</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_LCKR</span><span style="color:#24292E;"> 	 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AHBPERIPH_BASE</span><span style="color:#24292E;">   (PERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">20000</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RCC_BASE</span><span style="color:#24292E;"> 		 (AHBPERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RCC_APB2ENR</span><span style="color:#24292E;"> 	 </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(RCC_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span></code></pre></div>`,36),C=[_];function P(D,h,u,g,I,m){return n(),a("div",null,C)}const b=s(A,[["render",P]]);export{R as __pageData,b as default};
