import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b74c5ffd.js";const p="/stm32notebook/assets/存储器.f3b736a9.png",A=JSON.parse('{"title":"存储器与寄存器","description":"","frontmatter":{"next":{"text":"我要成为点灯大师！","link":"./使用寄存器点亮第一个LED"},"prev":{"text":"stm32最小系统","link":"./stm32最小系统"}},"headers":[],"relativePath":"存储器与寄存器.md","filePath":"存储器与寄存器.md"}'),o={name:"存储器与寄存器.md"},t=l('<h1 id="存储器与寄存器" tabindex="-1">存储器与寄存器 <a class="header-anchor" href="#存储器与寄存器" aria-label="Permalink to &quot;存储器与寄存器&quot;">​</a></h1><p><img src="'+p+`" alt=""></p><h2 id="什么是寄存器和寄存器映射" tabindex="-1">什么是寄存器和寄存器映射 <a class="header-anchor" href="#什么是寄存器和寄存器映射" aria-label="Permalink to &quot;什么是寄存器和寄存器映射&quot;">​</a></h2><p>我们把每个单元的功能作为名，给这个内存取一个别名，这个别名就是我们经常说的寄存器。然后通过 C 语言指针来操作这些寄存器即可。那什么是寄存器映射呢? 给已经分配好地址的有特定功能的内存单元取别名的过程就叫寄存器映射</p><p>也就是说寄存器就是有特定功能的内存单元</p><h2 id="如何访问-stm32-寄存器内容" tabindex="-1">如何访问 STM32 寄存器内容 <a class="header-anchor" href="#如何访问-stm32-寄存器内容" aria-label="Permalink to &quot;如何访问 STM32 寄存器内容&quot;">​</a></h2><table><thead><tr><th>总线名称</th><th>总线基地址</th><th>相对外设基地址的偏移</th></tr></thead><tbody><tr><td>APB1</td><td>0x4000 0000</td><td>0x0</td></tr><tr><td>APB2</td><td>0x4001 0000</td><td>0x0001 0000</td></tr><tr><td>AHB</td><td>0x4001 8000</td><td>0x0001 8000</td></tr></tbody></table><table><thead><tr><th>外设名称</th><th>外设基地址</th><th>相对 APB2 总线的地址偏移</th></tr></thead><tbody><tr><td>GPIOA</td><td>0x4001 0800</td><td>0x4001 0800</td></tr><tr><td>GPIOB</td><td>0x4001 0C00</td><td>0x4001 0C00</td></tr><tr><td>GPIOC</td><td>0x4001 1000</td><td>0x4001 1000</td></tr><tr><td>GPIOD</td><td>0x4001 1400</td><td>0x4001 1400</td></tr><tr><td>GPIOE</td><td>0x4001 1800</td><td>0x4001 1800</td></tr><tr><td>GPIOF</td><td>0x4001 1C00</td><td>0x4001 1C00</td></tr><tr><td>GPIOG</td><td>0x4001 2000</td><td>0x4001 2000</td></tr></tbody></table><p>GPIO 占 4 字节 地址使用 16 进制</p><h2 id="使用-c-语言封装寄存器" tabindex="-1">使用 C 语言封装寄存器 <a class="header-anchor" href="#使用-c-语言封装寄存器" aria-label="Permalink to &quot;使用 C 语言封装寄存器&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//总线和外设基地址封装</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PERIPH_BASE</span><span style="color:#E1E4E8;"> ((</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">40000000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">APB2PERIPH_BASE</span><span style="color:#E1E4E8;"> (PERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">00010000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BASE</span><span style="color:#E1E4E8;"> (APB2PERIPH_BASE </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0C00</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_CRL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_CRH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">04</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_IDR</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">08</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_ODR</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">0C</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BSRR</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_BRR</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">#define</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GPIOB_LCKR</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int*</span><span style="color:#E1E4E8;">)(GPIOB_BASE</span><span style="color:#F97583;">+0x</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//总线和外设基地址封装</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PERIPH_BASE</span><span style="color:#24292E;"> ((</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">40000000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">APB2PERIPH_BASE</span><span style="color:#24292E;"> (PERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">00010000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BASE</span><span style="color:#24292E;"> (APB2PERIPH_BASE </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0C00</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_CRL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_CRH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">04</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_IDR</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">08</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_ODR</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">0C</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BSRR</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_BRR</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">#define</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GPIOB_LCKR</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int*</span><span style="color:#24292E;">)(GPIOB_BASE</span><span style="color:#D73A49;">+0x</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">)</span></span></code></pre></div><p>比如要控制 GPIOB5 输出一个低电平或者高电平：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)GPIOB_BSRR </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">01</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">16</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)GPIOB_BSRR </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">01</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)GPIOB_BSRR </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">16</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)GPIOB_BSRR </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">01</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span></code></pre></div><p>比如要读取 GPIOB 管脚所有电平：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> temp;</span></span>
<span class="line"><span style="color:#E1E4E8;">temp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">unsigned</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">)GPIOB_IDR;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> temp;</span></span>
<span class="line"><span style="color:#24292E;">temp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">unsigned</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">)GPIOB_IDR;</span></span></code></pre></div>`,15),e=[t];function c(r,y,E,d,i,F){return n(),a("div",null,e)}const _=s(o,[["render",c]]);export{A as __pageData,_ as default};
